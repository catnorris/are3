options
   mouse on

fonts
   Small arial 18
   Large arial 40
   Huge arial 70

bitmaps
   square
   intro1
   intro2
   intro3
   intro4
   intro5
   intro6
   intro7
   intro8
   intro9
   introprac
   begingambs
   agneginstruct
   agposinstruct
   downposinstruct
   thankyou
   nexttrial
   cardback
   card_5
   card_10
   card_15
   card_20
   card_25
   card_30
   card_45
   card_60
   card_75
   card5
   card10
   card15
   card20
   card25
   card30
   card45
   card60
   card75
   losecard_5
   losecard_10
   losecard_15
   losecard_20
   losecard_25
   losecard_30
   losecard_45
   losecard_60
   losecard_75
   wincard5
   wincard10
   wincard15
   wincard20
   wincard25
   wincard30
   wincard45
   wincard60
   wincard75

table practable
   include praclist.txt
   
table gambtable
   include gamblelist1.txt

task practice
   table practable
   # showing stakes
   font Large
   text align center
   text color white
   show text @3 0 -80
   font Huge
   show text @4 0 -10
   show text @5 0 90
   delay 2000 
   clear -1 -2 -3
   # drawing the card backs, showing stakes
   draw off
      font Small
      show text @3 0 -260
      font Large
      show text @4 0 -220
      show text @5 0 -160
      show bitmap cardback -175 70 # left card - bitmap 1
      show bitmap cardback 175 70 # right card - bitmap 2
   draw on
   readmouse l 1 10000000000 range 7 8
   set $myMouseX MOUSE_X # current mouse x-coordinate
   set $myMouseY MOUSE_Y # current mouse x-coordinate
   clear -1 -2 
   # displaying choice
   if $myMouseX < 0
      draw off
         show bitmap @1 -175 70 # card won - bitmap 3 
         show bitmap @2 175 70 # other card - bitmap 4
      draw on
      delay 4000
      clear -1 -2 -3 -4 -5 -6 -7
   fi 
   if $myMouseX > 0
      draw off
         show bitmap @2 -175 70 # other card - bitmap 3
         show bitmap @1 175 70 # card won - bitmap 4
      draw on
      delay 4000
      clear -1 -2 -3 -4 -5 -6 -7
   fi 
   #drawing affect grid
   draw off
      show bitmap square -80 -143 # bm 5
      show bitmap square -19 -143 # bm 6
      show bitmap square 41 -143  # bm 7
      show bitmap square 102 -143 # bm 8
      show bitmap square 163 -143 # bm 9
      show bitmap square -80 -82 # bm 10
      show bitmap square -19 -82 # bm 11
      show bitmap square 41 -82 # bm 12
      show bitmap square 102 -82 # bm 13
      show bitmap square 163 -82 # bm 14
      show bitmap square -80 -21 # bm 15
      show bitmap square -19 -21 # bm 16
      show bitmap square 41 -21 # bm 17
      show bitmap square 102 -21 # bm 18
      show bitmap square 163 -21 # bm 19
      show bitmap square -80 40 # bm 20
      show bitmap square -19 40 # bm 21
      show bitmap square 41 40 # bm 22
      show bitmap square 102 40 # bm 23
      show bitmap square 163 40 # bm 24
      show bitmap square -80 101 # bm 25
      show bitmap square -19 101 # bm 26
      show bitmap square 41 101 # bm 27
      show bitmap square 102 101 # bm 28
      show bitmap square 163 101 # bm 29
      show bitmap agneginstruct -230 -20 # bm 30
      show bitmap agposinstruct 50 163 # bm 31
   draw on
   readmouse l 1 1000000000 range 9 35
   clear -1 -2 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 -14 -15 -16 -17 -18 -19 -20 -21 -22 -23 -24 -25 -26
   # let user start next trial whenever they want
   show bitmap nexttrial 0 0 # bm 32
   readmouse | 1 1000000000 
   clear -1

task gamble
   table gambtable
   # showing stakes
   font Large
   text align center
   text color white
   show text @3 0 -80
   font Huge
   show text @4 0 -10
   show text @5 0 90
   delay 2000 
   clear -1 -2 -3
   # drawing the card backs, showing stakes
   draw off
      font Small
      show text @3 0 -260
      font Large
      show text @4 0 -220
      show text @5 0 -160
      show bitmap cardback -175 70 # left card - bitmap 1
      show bitmap cardback 175 70 # right card - bitmap 2
   draw on
   readmouse l 1 10000000000 range 7 8
   set $myMouseX MOUSE_X # current mouse x-coordinate
   set $myMouseY MOUSE_Y # current mouse x-coordinate
   clear -1 -2
   # displaying choice
   if $myMouseX < 0
      draw off
         show bitmap @1 -175 70 # card won - bitmap 3 
         show bitmap @2 175 70 # other card - bitmap 4
      draw on
      delay 4000
      clear -1 -2 -3 -4 -5 -6 -7
      set $a 1
   fi 
   if $myMouseX > 0
      draw off
         show bitmap @2 -175 70 # other card - bitmap 3
         show bitmap @1 175 70 # card won - bitmap 4
      draw on
      delay 4000
      clear -1 -2 -3 -4 -5 -6 -7
      set $a 2
   fi 
   save $a RT
   #drawing affect grid
   draw off
      show bitmap square -80 -143 # bm 5
      show bitmap square -19 -143 # bm 6
      show bitmap square 41 -143  # bm 7
      show bitmap square 102 -143 # bm 8
      show bitmap square 163 -143 # bm 9
      show bitmap square -80 -82 # bm 10
      show bitmap square -19 -82 # bm 11
      show bitmap square 41 -82 # bm 12
      show bitmap square 102 -82 # bm 13
      show bitmap square 163 -82 # bm 14
      show bitmap square -80 -21 # bm 15
      show bitmap square -19 -21 # bm 16
      show bitmap square 41 -21 # bm 17
      show bitmap square 102 -21 # bm 18
      show bitmap square 163 -21 # bm 19
      show bitmap square -80 40 # bm 20
      show bitmap square -19 40 # bm 21
      show bitmap square 41 40 # bm 22
      show bitmap square 102 40 # bm 23
      show bitmap square 163 40 # bm 24
      show bitmap square -80 101 # bm 25
      show bitmap square -19 101 # bm 26
      show bitmap square 41 101 # bm 27
      show bitmap square 102 101 # bm 28
      show bitmap square 163 101 # bm 29
      show bitmap agneginstruct -230 -20 # bm 30
      show bitmap agposinstruct 50 163 # bm 31
   draw on
   readmouse l 1 1000000000 range 9 35
   set $myMouseX MOUSE_X # current mouse x-coordinate
   set $myMouseY MOUSE_Y # current mouse x-coordinate
   clear -1 -2 -3 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 -14 -15 -16 -17 -18 -19 -20 -21 -22 -23 -24 -25 -26
   save $myMouseX $myMouseY RT
   # let user start next trial whenever they want
   show bitmap nexttrial 0 0 # bm 32
   readmouse | 1 1000000000 
   clear -1
   save RT

message intro1
message intro2
message intro3
message intro4
message intro5
message intro6
message intro7
message intro8
message intro9
message introprac

block pracblock
   tasklist
      practice 5 fixed
   end

message begingambs

block block1
   tasklist
      gamble 80 fixed
   end 

message downposinstruct

block block2
   tasklist
      gamble 80 fixed
   end 

message thankyou
